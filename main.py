from pynput.mouse import Button, Controller
from pynput import keyboard
from svgpathtools import parse_path
import time
mouse = Controller()
eng_dict = {
    "a": parse_path("M 8.59 12.914 L 7.207 12.914 Q 7.055 12.388 6.991 11.458 A 16.628 16.628 0 0 1 6.973 11.156 A 4.231 4.231 0 0 1 5.8 12.416 A 4.095 4.095 0 0 1 5.467 12.627 A 3.983 3.983 0 0 1 3.469 13.149 A 4.671 4.671 0 0 1 2.427 13.039 Q 1.685 12.869 1.15 12.437 A 2.854 2.854 0 0 1 0.914 12.223 A 3.004 3.004 0 0 1 0.169 10.911 Q 0 10.321 0 9.586 A 4.395 4.395 0 0 1 0.193 8.251 A 3.483 3.483 0 0 1 1.272 6.633 Q 2.394 5.671 4.27 5.549 A 8.581 8.581 0 0 1 4.781 5.531 L 6.961 5.531 L 6.961 3.762 Q 6.961 2.402 6.287 1.811 A 2.154 2.154 0 0 0 5.533 1.391 Q 5.209 1.283 4.813 1.243 A 4.94 4.94 0 0 0 4.313 1.219 A 3.395 3.395 0 0 0 3.404 1.335 A 2.602 2.602 0 0 0 2.332 1.922 A 2.32 2.32 0 0 0 1.561 3.618 A 3.111 3.111 0 0 0 1.559 3.738 L 0.258 3.727 A 3.445 3.445 0 0 1 1.323 1.187 A 4.352 4.352 0 0 1 1.43 1.084 A 4.043 4.043 0 0 1 3.872 0.023 A 5.383 5.383 0 0 1 4.371 0 Q 5.697 0 6.576 0.463 A 2.938 2.938 0 0 1 7.266 0.961 A 3.076 3.076 0 0 1 8.058 2.309 Q 8.25 2.95 8.25 3.762 L 8.25 9.985 Q 8.25 11.848 8.59 12.774 L 8.59 12.914 Z M 6.961 9.703 L 6.961 6.621 L 4.899 6.621 A 6.711 6.711 0 0 0 3.895 6.705 Q 3.377 6.79 2.962 6.963 A 2.808 2.808 0 0 0 2.215 7.412 A 2.515 2.515 0 0 0 1.324 9.202 A 3.513 3.513 0 0 0 1.313 9.481 Q 1.313 11.895 3.633 11.895 A 3.746 3.746 0 0 0 4.904 11.684 A 3.409 3.409 0 0 0 5.666 11.297 A 3.48 3.48 0 0 0 6.961 9.703 Z"),
    "b": parse_path("M 8.66 10.852 L 8.66 12.258 Q 8.66 15.188 7.635 16.711 A 3.311 3.311 0 0 1 5.22 18.193 A 4.799 4.799 0 0 1 4.582 18.234 A 4.056 4.056 0 0 1 3.109 17.979 Q 2.097 17.588 1.445 16.596 A 4.726 4.726 0 0 1 1.266 16.301 L 1.207 18 L 0 18 L 0 0 L 1.289 0 L 1.289 7.09 A 4.13 4.13 0 0 1 2.157 5.949 Q 3.113 5.086 4.559 5.086 A 4.598 4.598 0 0 1 5.792 5.242 A 3.204 3.204 0 0 1 7.617 6.533 A 4.857 4.857 0 0 1 8.234 7.811 Q 8.625 9.013 8.658 10.74 A 16.423 16.423 0 0 1 8.66 10.852 Z M 7.359 12.34 L 7.359 11.074 A 13.014 13.014 0 0 0 7.303 9.815 Q 7.18 8.554 6.789 7.762 A 3.19 3.19 0 0 0 6.645 7.5 A 2.348 2.348 0 0 0 4.992 6.399 A 3.802 3.802 0 0 0 4.301 6.34 Q 2.59 6.34 1.704 7.763 A 4.72 4.72 0 0 0 1.289 8.625 L 1.289 14.906 A 3.756 3.756 0 0 0 1.777 15.784 A 3.078 3.078 0 0 0 2.461 16.447 Q 3.234 16.992 4.324 16.992 Q 5.883 16.992 6.615 15.861 Q 7.348 14.73 7.359 12.34 Z"),
    "c": parse_path("M 7.465 8.988 L 8.719 8.988 Q 8.625 10.934 7.477 12.041 A 3.917 3.917 0 0 1 4.914 13.139 A 5.187 5.187 0 0 1 4.594 13.149 A 5.62 5.62 0 0 1 3.229 12.993 A 3.687 3.687 0 0 1 1.178 11.701 A 4.679 4.679 0 0 1 0.427 10.294 Q 0.201 9.64 0.095 8.837 A 11.635 11.635 0 0 1 0 7.406 L 0 5.86 A 11.725 11.725 0 0 1 0.102 4.26 Q 0.343 2.515 1.154 1.477 A 3.718 3.718 0 0 1 3.392 0.117 A 5.737 5.737 0 0 1 4.582 0 A 4.826 4.826 0 0 1 5.86 0.161 A 3.514 3.514 0 0 1 7.559 1.19 A 4.119 4.119 0 0 1 8.442 2.759 Q 8.687 3.537 8.719 4.512 L 7.465 4.512 A 5.662 5.662 0 0 0 7.353 3.558 Q 7.164 2.659 6.668 2.08 A 2.405 2.405 0 0 0 5.227 1.274 A 3.576 3.576 0 0 0 4.582 1.219 A 3.949 3.949 0 0 0 3.615 1.33 A 2.529 2.529 0 0 0 2.104 2.356 Q 1.355 3.432 1.315 5.6 A 13.457 13.457 0 0 0 1.313 5.848 L 1.313 7.289 Q 1.313 9.444 1.935 10.559 A 2.842 2.842 0 0 0 2.11 10.834 A 2.559 2.559 0 0 0 3.67 11.844 A 4.102 4.102 0 0 0 4.594 11.942 Q 5.668 11.942 6.347 11.466 A 2.214 2.214 0 0 0 6.68 11.18 A 2.606 2.606 0 0 0 7.252 10.217 Q 7.385 9.832 7.437 9.366 A 5.381 5.381 0 0 0 7.465 8.988 Z"),
    "d": parse_path("M 0 12.387 L 0 11.074 Q 0 8.098 1.043 6.592 Q 2.086 5.086 4.137 5.086 A 3.765 3.765 0 0 1 5.642 5.375 Q 6.514 5.751 7.111 6.617 A 4.746 4.746 0 0 1 7.36 7.02 L 7.36 0 L 8.66 0 L 8.66 18 L 7.442 18 L 7.383 16.371 A 3.811 3.811 0 0 1 6.378 17.542 Q 5.618 18.115 4.572 18.214 A 4.767 4.767 0 0 1 4.125 18.234 A 4.187 4.187 0 0 1 2.808 18.038 A 3.339 3.339 0 0 1 1.072 16.711 A 5.301 5.301 0 0 1 0.389 15.262 Q 0.014 14.05 0 12.387 Z M 1.324 10.992 L 1.324 12.258 A 12.906 12.906 0 0 0 1.382 13.523 Q 1.508 14.794 1.908 15.582 A 3.083 3.083 0 0 0 2.057 15.844 A 2.4 2.4 0 0 0 3.793 16.948 A 3.794 3.794 0 0 0 4.383 16.992 Q 6.434 16.992 7.36 15.035 L 7.36 8.461 A 4.19 4.19 0 0 0 6.751 7.412 Q 5.878 6.34 4.395 6.34 A 3.516 3.516 0 0 0 3.483 6.451 A 2.348 2.348 0 0 0 2.068 7.477 A 3.754 3.754 0 0 0 1.654 8.393 Q 1.376 9.281 1.332 10.573 A 14.504 14.504 0 0 0 1.324 10.992 Z"),
    "e": parse_path("M 0 7.512 L 0 5.965 A 10.343 10.343 0 0 1 0.131 4.264 Q 0.4 2.655 1.219 1.588 A 3.907 3.907 0 0 1 4.052 0.025 A 5.302 5.302 0 0 1 4.57 0 A 5.022 5.022 0 0 1 5.866 0.158 A 3.451 3.451 0 0 1 7.717 1.348 A 4.262 4.262 0 0 1 8.402 2.619 Q 8.809 3.776 8.824 5.46 A 14.459 14.459 0 0 1 8.824 5.473 L 8.824 6.692 L 1.289 6.692 L 1.289 7.406 A 8.232 8.232 0 0 0 1.38 8.672 Q 1.58 9.956 2.221 10.77 A 3.031 3.031 0 0 0 4.339 11.924 A 4.404 4.404 0 0 0 4.852 11.953 A 4.163 4.163 0 0 0 6.356 11.691 A 3.751 3.751 0 0 0 7.887 10.582 L 8.567 11.449 A 4.014 4.014 0 0 1 5.987 13.041 A 6.266 6.266 0 0 1 4.793 13.149 A 5.487 5.487 0 0 1 3.281 12.951 A 4.045 4.045 0 0 1 1.289 11.684 Q 0.024 10.219 0 7.512 Z M 1.301 5.473 L 7.524 5.473 L 7.524 5.133 A 7.902 7.902 0 0 0 7.372 3.706 Q 6.864 1.288 4.696 1.221 A 4.047 4.047 0 0 0 4.57 1.219 Q 3.035 1.219 2.209 2.303 Q 1.598 3.105 1.394 4.455 A 9.265 9.265 0 0 0 1.301 5.473 Z"),
    "f": parse_path("M 3.059 18.246 L 1.746 18.246 L 1.746 6.738 L 0 6.738 L 0 5.566 L 1.746 5.566 L 1.746 3.902 Q 1.77 2.016 2.619 1.008 A 2.779 2.779 0 0 1 4.462 0.031 A 3.999 3.999 0 0 1 4.969 0 A 4.059 4.059 0 0 1 5.777 0.078 A 3.45 3.45 0 0 1 6.223 0.199 L 6.129 1.395 Q 5.613 1.266 5.074 1.266 A 2.031 2.031 0 0 0 4.397 1.374 A 1.699 1.699 0 0 0 3.592 1.975 Q 3.186 2.514 3.089 3.409 A 5.561 5.561 0 0 0 3.059 4.008 L 3.059 5.566 L 5.543 5.566 L 5.543 6.738 L 3.059 6.738 L 3.059 18.246 Z"),
    "g": parse_path("M 0 7.36 L 0 5.989 A 14.062 14.062 0 0 1 0.082 4.42 Q 0.275 2.7 0.929 1.651 A 3.979 3.979 0 0 1 1.031 1.495 A 3.356 3.356 0 0 1 3.491 0.039 A 5.068 5.068 0 0 1 4.125 0 A 3.743 3.743 0 0 1 5.652 0.3 Q 6.51 0.679 7.1 1.536 A 4.826 4.826 0 0 1 7.383 2.004 L 7.453 0.235 L 8.66 0.235 L 8.66 13.278 Q 8.652 14.834 8.152 15.885 A 3.632 3.632 0 0 1 7.565 16.77 Q 6.481 17.965 4.406 17.965 A 4.589 4.589 0 0 1 2.865 17.69 A 5.677 5.677 0 0 1 2.303 17.456 Q 1.351 16.998 0.809 16.356 A 3.18 3.18 0 0 1 0.692 16.207 L 1.301 15.27 A 4.877 4.877 0 0 0 2.311 16.162 A 3.604 3.604 0 0 0 4.313 16.758 A 4.691 4.691 0 0 0 5.155 16.688 Q 6.103 16.514 6.615 15.915 A 2.656 2.656 0 0 0 7.091 15.065 Q 7.341 14.357 7.348 13.348 L 7.348 11.332 Q 6.281 13.149 4.113 13.149 A 4.198 4.198 0 0 1 2.81 12.957 A 3.334 3.334 0 0 1 1.084 11.661 Q 0.321 10.578 0.095 8.795 A 12.664 12.664 0 0 1 0 7.36 Z M 1.313 5.907 L 1.313 7.172 Q 1.313 9.61 2.051 10.758 A 2.415 2.415 0 0 0 3.808 11.866 A 3.769 3.769 0 0 0 4.371 11.907 A 3.413 3.413 0 0 0 5.675 11.67 Q 6.533 11.319 7.068 10.446 A 4.323 4.323 0 0 0 7.348 9.903 L 7.348 3.422 A 4.354 4.354 0 0 0 6.759 2.374 A 2.84 2.84 0 0 0 4.395 1.254 A 3.523 3.523 0 0 0 3.482 1.365 A 2.365 2.365 0 0 0 2.063 2.391 A 3.745 3.745 0 0 0 1.643 3.313 Q 1.32 4.341 1.313 5.907 Z"),
    "tick": parse_path("M 1.728 6.456 L 5.064 13.584 L 5.112 13.584 Q 9.432 6.192 14.88 0 L 16.32 1.272 Q 10.584 7.824 6.36 15.192 L 3.72 15.192 L 0 7.272 L 1.728 6.456 Z"),
    "cross": parse_path("M 7.848 7.368 L 11.928 14.232 L 11.496 14.472 L 7.512 7.728 Q 3.768 11.472 0.384 15.696 L 0 15.408 Q 3.696 10.8 7.248 7.296 L 3.816 1.512 L 4.248 1.272 L 7.608 6.96 Q 10.944 3.672 15.408 0 L 15.696 0.384 Q 11.256 3.984 7.848 7.368 Z"),
    "o": parse_path("M 0 6.891 L 0 6.328 A 8.128 8.128 0 0 1 0.215 4.427 A 6.766 6.766 0 0 1 0.697 3.065 A 5.56 5.56 0 0 1 1.877 1.424 A 5.193 5.193 0 0 1 2.666 0.809 A 5.204 5.204 0 0 1 5.344 0.003 A 6.254 6.254 0 0 1 5.543 0 A 5.54 5.54 0 0 1 7.45 0.322 A 5.12 5.12 0 0 1 8.402 0.785 A 5.23 5.23 0 0 1 10.236 2.742 A 6.347 6.347 0 0 1 10.377 3.012 A 7.037 7.037 0 0 1 11.048 5.377 A 8.669 8.669 0 0 1 11.098 6.258 L 11.098 6.82 A 8.287 8.287 0 0 1 10.903 8.654 A 6.759 6.759 0 0 1 10.406 10.09 A 5.494 5.494 0 0 1 9.182 11.773 A 5.197 5.197 0 0 1 8.443 12.34 A 5.204 5.204 0 0 1 5.766 13.145 A 6.254 6.254 0 0 1 5.567 13.149 Q 3.961 13.149 2.69 12.352 A 5.294 5.294 0 0 1 0.805 10.296 A 6.339 6.339 0 0 1 0.715 10.119 A 7.029 7.029 0 0 1 0.049 7.765 A 8.637 8.637 0 0 1 0 6.891 Z M 0.633 6.445 L 0.633 6.82 A 6.944 6.944 0 0 0 0.923 8.849 A 6.27 6.27 0 0 0 1.26 9.721 A 5.249 5.249 0 0 0 2.178 11.082 A 4.673 4.673 0 0 0 3.006 11.778 Q 4.125 12.516 5.567 12.516 A 4.687 4.687 0 0 0 7.423 12.158 A 4.46 4.46 0 0 0 9.1 10.887 A 5.712 5.712 0 0 0 10.311 8.31 A 8.102 8.102 0 0 0 10.465 6.692 L 10.465 6.328 A 6.709 6.709 0 0 0 10.055 3.972 A 6.355 6.355 0 0 0 9.832 3.445 A 5.342 5.342 0 0 0 8.916 2.085 A 4.73 4.73 0 0 0 8.08 1.377 A 4.469 4.469 0 0 0 5.587 0.633 A 5.38 5.38 0 0 0 5.543 0.633 A 4.617 4.617 0 0 0 3.63 1.021 A 4.506 4.506 0 0 0 2.004 2.285 A 5.872 5.872 0 0 0 0.735 5.138 A 8.032 8.032 0 0 0 0.633 6.445 Z"),
    "k": parse_path("M 8.332 18 L 2.496 11.145 L 2.473 11.168 L 0.633 12.75 L 0.633 18 L 0 18 L 0 0 L 0.633 0 L 0.633 12.059 L 2.121 10.652 L 7.887 5.32 L 8.789 5.32 L 2.965 10.723 L 9.152 18 L 8.332 18 Z"),
    "*": parse_path("M 1.512 8.941 L 4.254 5.145 L 0 3.691 L 0.211 3.059 L 4.453 4.617 L 4.465 0 L 5.121 0 L 5.039 4.629 L 9.164 2.953 L 9.398 3.574 L 5.18 5.18 L 8.098 8.895 L 7.547 9.281 L 4.711 5.508 L 2.039 9.316 L 1.512 8.941 Z"),
    "h": parse_path("M 0.633 0 L 0.633 8.273 A 5.609 5.609 0 0 1 1.592 6.722 A 5.049 5.049 0 0 1 2.461 5.941 Q 3.668 5.086 5.133 5.086 Q 6.577 5.086 7.495 5.665 A 2.94 2.94 0 0 1 8.162 6.24 A 3.642 3.642 0 0 1 8.823 7.424 Q 9.011 7.961 9.096 8.622 A 9.115 9.115 0 0 1 9.164 9.727 L 9.164 18 L 8.531 18 L 8.531 9.703 Q 8.52 7.664 7.699 6.686 A 2.536 2.536 0 0 0 6.536 5.915 Q 5.919 5.707 5.098 5.707 A 3.943 3.943 0 0 0 2.256 6.873 A 5.66 5.66 0 0 0 0.864 9.08 A 7.207 7.207 0 0 0 0.633 9.879 L 0.633 18 L 0 18 L 0 0 L 0.633 0 Z"),
    "0": parse_path("M 10.207 7.254 L 10.207 10.348 A 14.257 14.257 0 0 1 10.077 12.342 Q 9.79 14.369 8.871 15.662 A 4.248 4.248 0 0 1 5.788 17.505 A 5.655 5.655 0 0 1 5.121 17.543 A 4.863 4.863 0 0 1 3.341 17.23 Q 2.203 16.786 1.41 15.715 A 5.523 5.523 0 0 1 1.36 15.645 Q 0 13.746 0 10.301 L 0 7.207 A 13.998 13.998 0 0 1 0.131 5.229 Q 0.283 4.166 0.612 3.3 A 6.263 6.263 0 0 1 1.342 1.905 A 4.255 4.255 0 0 1 4.422 0.04 A 5.583 5.583 0 0 1 5.098 0 Q 7.5 0 8.84 1.869 A 5.436 5.436 0 0 1 8.865 1.905 A 6.537 6.537 0 0 1 9.759 3.786 Q 10.207 5.262 10.207 7.254 Z M 9.574 10.266 L 9.574 7.207 A 13.427 13.427 0 0 0 9.461 5.4 Q 9.331 4.451 9.056 3.675 A 5.821 5.821 0 0 0 8.408 2.368 Q 7.242 0.633 5.098 0.633 Q 3.004 0.633 1.855 2.275 A 4.766 4.766 0 0 0 1.787 2.373 A 6.088 6.088 0 0 0 1.04 4.02 Q 0.811 4.793 0.711 5.724 A 14.437 14.437 0 0 0 0.633 7.266 L 0.633 10.325 Q 0.633 13.418 1.817 15.164 A 4.037 4.037 0 0 0 3.007 16.343 Q 3.82 16.853 4.879 16.905 A 4.963 4.963 0 0 0 5.121 16.911 A 4.139 4.139 0 0 0 6.666 16.633 Q 7.716 16.215 8.414 15.164 A 6.108 6.108 0 0 0 9.165 13.514 Q 9.395 12.74 9.496 11.809 A 14.376 14.376 0 0 0 9.574 10.266 Z"),
    "1": parse_path("M 5.531 0 L 5.531 17.109 L 4.898 17.109 L 4.898 0.844 L 0 2.684 L 0 1.992 L 5.402 0 L 5.531 0 Z"),
    "2": parse_path("M 10.629 16.664 L 10.629 17.297 L 0.422 17.297 L 0.422 16.664 L 6.246 9.949 Q 7.676 8.274 8.373 6.973 A 6.961 6.961 0 0 0 8.798 6.028 Q 9.07 5.264 9.07 4.582 A 5.177 5.177 0 0 0 8.942 3.392 Q 8.712 2.42 8.074 1.762 A 3.304 3.304 0 0 0 7.981 1.67 Q 6.891 0.633 4.91 0.633 A 4.247 4.247 0 0 0 2.731 1.207 Q 1.746 1.781 1.19 2.795 A 4.551 4.551 0 0 0 0.638 4.82 A 5.406 5.406 0 0 0 0.633 5.051 L 0 5.051 A 5.268 5.268 0 0 1 0.633 2.508 Q 1.266 1.336 2.391 0.668 A 4.802 4.802 0 0 1 4.737 0.003 A 5.72 5.72 0 0 1 4.91 0 A 6.894 6.894 0 0 1 6.324 0.136 Q 7.207 0.322 7.881 0.758 A 3.886 3.886 0 0 1 8.449 1.207 Q 9.715 2.414 9.715 4.582 A 4.551 4.551 0 0 1 9.451 6.045 Q 8.946 7.529 7.477 9.352 L 6.41 10.653 L 1.254 16.664 L 10.629 16.664 Z"),
    "3": parse_path("M 3.68 8.93 L 3.68 8.274 L 5.109 8.274 A 6.51 6.51 0 0 0 6.504 8.107 Q 7.577 7.852 8.35 7.207 A 3.433 3.433 0 0 0 9.267 6.056 A 3.361 3.361 0 0 0 9.586 4.582 A 4.808 4.808 0 0 0 9.432 3.331 A 3.47 3.47 0 0 0 8.479 1.699 A 3.653 3.653 0 0 0 6.834 0.802 Q 6.268 0.654 5.596 0.636 A 7.036 7.036 0 0 0 5.402 0.633 A 5.383 5.383 0 0 0 3.927 0.826 A 4.183 4.183 0 0 0 2.238 1.758 A 3.722 3.722 0 0 0 1.007 4.373 A 5.103 5.103 0 0 0 0.996 4.711 L 0.363 4.711 A 4.821 4.821 0 0 1 0.62 3.122 A 4.394 4.394 0 0 1 1.02 2.274 Q 1.676 1.196 2.836 0.598 A 5.44 5.44 0 0 1 5.098 0.007 A 6.436 6.436 0 0 1 5.402 0 Q 7.617 0 8.918 1.248 A 4.138 4.138 0 0 1 10.127 3.558 A 5.974 5.974 0 0 1 10.219 4.629 Q 10.219 5.988 9.357 7.055 A 4.463 4.463 0 0 1 7.58 8.369 A 5.664 5.664 0 0 1 7.031 8.567 A 5.913 5.913 0 0 1 8.293 9.003 A 4.299 4.299 0 0 1 9.65 10.02 A 3.688 3.688 0 0 1 10.511 11.826 A 5.168 5.168 0 0 1 10.594 12.774 A 5.5 5.5 0 0 1 10.389 14.312 A 4.159 4.159 0 0 1 9.199 16.242 A 4.737 4.737 0 0 1 6.887 17.399 A 6.841 6.841 0 0 1 5.508 17.531 Q 3.961 17.531 2.648 16.863 Q 1.336 16.196 0.668 15.094 A 4.616 4.616 0 0 1 0.032 13.165 A 5.778 5.778 0 0 1 0 12.551 L 0.633 12.551 A 4.147 4.147 0 0 0 1.02 14.357 A 4.129 4.129 0 0 0 2.016 15.662 A 4.81 4.81 0 0 0 4.666 16.846 A 6.499 6.499 0 0 0 5.508 16.899 Q 7.162 16.899 8.244 16.225 A 3.622 3.622 0 0 0 8.783 15.815 A 3.561 3.561 0 0 0 9.873 13.803 A 5.231 5.231 0 0 0 9.961 12.821 Q 9.961 10.934 8.701 9.938 A 4.115 4.115 0 0 0 7.431 9.272 Q 6.861 9.084 6.168 8.999 A 9.901 9.901 0 0 0 5.016 8.93 L 3.68 8.93 Z"),
    "4": parse_path("M 8.906 0 L 8.906 11.777 L 11.859 11.777 L 11.859 12.41 L 8.906 12.41 L 8.906 17.063 L 8.273 17.063 L 8.273 12.41 L 0 12.41 L 0 12.059 L 8.145 0 L 8.906 0 Z M 7.289 2.379 L 0.984 11.777 L 8.273 11.777 L 8.273 0.762 L 7.289 2.379 Z"),
    "5": parse_path("M 1.055 8.32 L 0.574 8.133 L 1.371 0 L 9.691 0 L 9.691 0.621 L 1.945 0.621 L 1.254 7.465 A 3.776 3.776 0 0 1 1.899 7.04 Q 2.219 6.871 2.602 6.733 A 6.993 6.993 0 0 1 2.865 6.645 Q 3.867 6.328 4.828 6.328 A 5.877 5.877 0 0 1 6.451 6.541 A 4.441 4.441 0 0 1 8.496 7.781 A 4.922 4.922 0 0 1 9.745 10.28 A 7.053 7.053 0 0 1 9.867 11.625 Q 9.867 14.402 8.625 15.85 A 4.024 4.024 0 0 1 6.345 17.169 A 6.105 6.105 0 0 1 5.062 17.297 Q 2.871 17.297 1.523 16.043 Q 0.176 14.789 0 12.574 L 0.645 12.574 A 6.38 6.38 0 0 0 0.883 13.835 Q 1.112 14.587 1.53 15.146 A 3.534 3.534 0 0 0 1.957 15.621 A 3.728 3.728 0 0 0 3.544 16.478 Q 4.12 16.635 4.805 16.66 A 7.208 7.208 0 0 0 5.063 16.664 A 5.539 5.539 0 0 0 6.275 16.54 Q 7.492 16.267 8.197 15.393 Q 8.963 14.443 9.157 12.822 A 9.905 9.905 0 0 0 9.223 11.648 A 6.207 6.207 0 0 0 9.062 10.197 A 4.286 4.286 0 0 0 8.033 8.238 A 3.942 3.942 0 0 0 5.62 7.014 A 5.583 5.583 0 0 0 4.84 6.961 A 7.804 7.804 0 0 0 3.824 7.024 Q 3.286 7.094 2.825 7.245 A 4.631 4.631 0 0 0 2.695 7.289 Q 1.781 7.617 1.055 8.32 Z"),
    "6": parse_path("M 8.344 0 L 8.344 0.633 Q 4.758 0.633 2.778 2.754 Q 0.797 4.875 0.645 8.707 Q 1.325 7.5 2.614 6.791 A 5.764 5.764 0 0 1 5.438 6.082 A 5.325 5.325 0 0 1 7.087 6.326 A 4.303 4.303 0 0 1 9.03 7.617 A 5.271 5.271 0 0 1 10.194 9.971 A 7.726 7.726 0 0 1 10.371 11.672 A 7.571 7.571 0 0 1 10.133 13.598 A 6.614 6.614 0 0 1 9.762 14.649 A 5.353 5.353 0 0 1 8.889 16.013 A 4.718 4.718 0 0 1 8.039 16.764 A 4.277 4.277 0 0 1 5.555 17.532 A 5.836 5.836 0 0 1 3.636 17.222 A 5.343 5.343 0 0 1 2.719 16.805 A 5.074 5.074 0 0 1 0.739 14.731 A 6.32 6.32 0 0 1 0.062 12.549 A 7.864 7.864 0 0 1 0 11.66 L 0 9.563 A 15.502 15.502 0 0 1 0.231 6.798 Q 0.51 5.262 1.126 4.045 A 7.711 7.711 0 0 1 2.145 2.508 A 6.927 6.927 0 0 1 5.996 0.245 A 10.615 10.615 0 0 1 8.344 0 Z M 0.633 10.02 L 0.633 11.52 A 6.923 6.923 0 0 0 0.834 13.232 A 4.994 4.994 0 0 0 2.004 15.422 Q 3.375 16.91 5.555 16.91 Q 7.371 16.91 8.555 15.393 A 5.553 5.553 0 0 0 9.669 12.699 A 7.366 7.366 0 0 0 9.739 11.672 Q 9.739 9.399 8.567 8.057 A 3.847 3.847 0 0 0 6.097 6.763 A 5.517 5.517 0 0 0 5.356 6.715 Q 3.715 6.715 2.35 7.658 A 4.682 4.682 0 0 0 1.364 8.557 A 3.72 3.72 0 0 0 0.633 10.02 Z"),
    "7": parse_path("M 10.898 0 L 10.898 0.398 L 3.387 17.063 L 2.742 17.063 L 10.172 0.633 L 0 0.633 L 0 0 L 10.898 0 Z"),
    "8": parse_path("M 10.383 4.571 Q 10.383 6 9.498 7.072 A 4.6 4.6 0 0 1 7.262 8.55 A 5.547 5.547 0 0 1 7.207 8.567 A 5.762 5.762 0 0 1 8.671 9.168 A 4.746 4.746 0 0 1 9.879 10.184 A 4.01 4.01 0 0 1 10.875 12.856 A 5.101 5.101 0 0 1 10.658 14.382 A 4.001 4.001 0 0 1 9.393 16.278 A 5.097 5.097 0 0 1 7.287 17.325 Q 6.528 17.512 5.635 17.53 A 9.444 9.444 0 0 1 5.449 17.531 A 8.118 8.118 0 0 1 3.814 17.376 Q 2.815 17.171 2.042 16.693 A 4.623 4.623 0 0 1 1.471 16.278 A 4.11 4.11 0 0 1 0.033 13.479 A 5.837 5.837 0 0 1 0 12.856 A 4.075 4.075 0 0 1 0.967 10.178 A 4.713 4.713 0 0 1 2.813 8.836 A 6.173 6.173 0 0 1 3.61 8.567 A 4.695 4.695 0 0 1 2.098 7.811 A 4.342 4.342 0 0 1 1.342 7.072 Q 0.481 6 0.481 4.571 A 5.303 5.303 0 0 1 0.671 3.112 A 3.96 3.96 0 0 1 1.834 1.231 A 4.615 4.615 0 0 1 4.042 0.133 A 6.648 6.648 0 0 1 5.403 0 A 6.444 6.444 0 0 1 6.983 0.184 A 4.638 4.638 0 0 1 9.006 1.254 A 4.15 4.15 0 0 1 10.36 4.052 A 5.741 5.741 0 0 1 10.383 4.571 Z M 10.231 12.914 A 3.722 3.722 0 0 0 9.85 11.222 A 3.801 3.801 0 0 0 8.883 10.02 A 4.73 4.73 0 0 0 6.685 8.997 A 6.653 6.653 0 0 0 5.426 8.883 Q 3.305 8.883 1.969 10.014 A 3.601 3.601 0 0 0 0.642 12.628 A 4.49 4.49 0 0 0 0.633 12.914 A 4.026 4.026 0 0 0 0.866 14.31 A 3.502 3.502 0 0 0 1.94 15.809 Q 3.139 16.809 5.094 16.891 A 8.475 8.475 0 0 0 5.449 16.899 A 6.901 6.901 0 0 0 6.919 16.751 Q 7.905 16.536 8.65 16.009 A 4.223 4.223 0 0 0 8.918 15.803 A 3.528 3.528 0 0 0 10.219 13.244 A 4.645 4.645 0 0 0 10.231 12.914 Z M 9.75 4.512 A 3.525 3.525 0 0 0 8.653 1.886 A 4.345 4.345 0 0 0 8.496 1.74 A 4.395 4.395 0 0 0 5.867 0.651 A 5.76 5.76 0 0 0 5.403 0.633 A 5.455 5.455 0 0 0 3.995 0.806 A 4.071 4.071 0 0 0 2.315 1.699 A 3.511 3.511 0 0 0 1.124 4.191 A 4.812 4.812 0 0 0 1.113 4.512 A 3.766 3.766 0 0 0 1.342 5.848 A 3.357 3.357 0 0 0 2.309 7.213 A 4.13 4.13 0 0 0 4.191 8.128 A 5.92 5.92 0 0 0 5.426 8.25 A 5.627 5.627 0 0 0 6.83 8.084 A 4.15 4.15 0 0 0 8.537 7.201 A 3.365 3.365 0 0 0 9.743 4.765 A 4.26 4.26 0 0 0 9.75 4.512 Z"),
    "9": parse_path("M 10.43 6.668 L 10.43 8.625 A 15.57 15.57 0 0 1 10.242 11.127 Q 9.829 13.658 8.508 15.217 Q 6.627 17.436 3.008 17.528 A 12.27 12.27 0 0 1 2.848 17.532 L 2.285 17.532 L 2.309 16.899 L 2.813 16.899 Q 6.235 16.864 8.016 14.813 Q 9.424 13.191 9.719 10.383 A 15.055 15.055 0 0 0 9.797 8.813 Q 9.176 10.16 7.869 10.987 Q 6.563 11.813 4.922 11.813 Q 3.516 11.813 2.391 11.057 A 4.992 4.992 0 0 1 0.799 9.299 A 6.023 6.023 0 0 1 0.633 8.977 A 6.558 6.558 0 0 1 0.008 6.414 A 7.707 7.707 0 0 1 0 6.071 A 7.591 7.591 0 0 1 0.291 3.943 A 6.808 6.808 0 0 1 0.645 2.994 A 5.635 5.635 0 0 1 1.562 1.577 A 4.955 4.955 0 0 1 2.449 0.797 A 4.434 4.434 0 0 1 5.016 0 A 6.446 6.446 0 0 1 6.663 0.199 A 4.405 4.405 0 0 1 9.035 1.717 Q 10.102 3.042 10.353 5.269 A 12.942 12.942 0 0 1 10.43 6.668 Z M 9.797 7.453 L 9.797 6.727 A 11.498 11.498 0 0 0 9.678 5.016 Q 9.547 4.145 9.27 3.441 A 4.913 4.913 0 0 0 8.572 2.198 A 3.981 3.981 0 0 0 5.882 0.688 A 5.886 5.886 0 0 0 5.063 0.633 A 3.785 3.785 0 0 0 2.789 1.371 A 4.721 4.721 0 0 0 1.43 2.923 A 5.812 5.812 0 0 0 1.201 3.381 Q 0.633 4.653 0.633 6.071 A 6.184 6.184 0 0 0 0.983 8.163 A 5.824 5.824 0 0 0 1.184 8.655 A 4.864 4.864 0 0 0 1.912 9.8 A 4.159 4.159 0 0 0 2.707 10.512 A 3.815 3.815 0 0 0 4.903 11.18 A 4.605 4.605 0 0 0 4.922 11.18 Q 6.656 11.18 7.992 10.16 A 4.982 4.982 0 0 0 9.797 7.453 Z"),
    "i": parse_path("M 0.961 4.617 L 0.961 17.297 L 0.328 17.297 L 0.328 4.617 L 0.961 4.617 Z M 0 0.656 Q 0 0.387 0.188 0.193 A 0.611 0.611 0 0 1 0.628 0 A 0.741 0.741 0 0 1 0.645 0 Q 0.914 0 1.107 0.193 A 0.646 0.646 0 0 1 1.27 0.454 A 0.657 0.657 0 0 1 1.301 0.656 A 0.611 0.611 0 0 1 1.119 1.102 A 0.74 0.74 0 0 1 1.107 1.113 Q 0.914 1.301 0.645 1.301 A 0.638 0.638 0 0 1 0.354 1.235 A 0.644 0.644 0 0 1 0.188 1.113 A 0.621 0.621 0 0 1 0 0.665 A 0.766 0.766 0 0 1 0 0.656 Z"),
    "j": parse_path("M 3.855 4.617 L 4.488 4.617 L 4.488 18.809 Q 4.488 20.038 4.059 20.86 A 2.787 2.787 0 0 1 3.609 21.492 A 2.872 2.872 0 0 1 2.153 22.309 A 4.346 4.346 0 0 1 1.148 22.418 A 2.97 2.97 0 0 1 0.145 22.239 A 3.453 3.453 0 0 1 0 22.184 L 0.035 21.574 A 3.29 3.29 0 0 0 0.803 21.765 A 2.923 2.923 0 0 0 1.148 21.785 Q 2.461 21.785 3.158 21.006 A 2.559 2.559 0 0 0 3.697 20.015 Q 3.813 19.625 3.844 19.157 A 5.296 5.296 0 0 0 3.855 18.809 L 3.855 4.617 Z M 3.586 0.656 Q 3.586 0.387 3.773 0.193 A 0.611 0.611 0 0 1 4.214 0 A 0.741 0.741 0 0 1 4.23 0 Q 4.5 0 4.693 0.193 A 0.646 0.646 0 0 1 4.856 0.454 A 0.657 0.657 0 0 1 4.887 0.656 A 0.611 0.611 0 0 1 4.705 1.102 A 0.74 0.74 0 0 1 4.693 1.113 Q 4.5 1.301 4.23 1.301 A 0.638 0.638 0 0 1 3.94 1.235 A 0.644 0.644 0 0 1 3.773 1.113 A 0.621 0.621 0 0 1 3.586 0.665 A 0.766 0.766 0 0 1 3.586 0.656 Z"),
    "l": parse_path("M 0.633 0 L 0.633 18 L 0 18 L 0 0 L 0.633 0 Z"),
    "m": parse_path("M 9.199 4.477 L 9.199 12.914 L 8.566 12.914 L 8.566 4.395 A 7.075 7.075 0 0 0 8.488 3.347 Q 8.309 2.208 7.729 1.553 A 2.523 2.523 0 0 0 6.663 0.856 Q 6.004 0.621 5.098 0.621 A 3.919 3.919 0 0 0 2.075 1.98 A 5.525 5.525 0 0 0 1.688 2.461 Q 0.902 3.563 0.645 4.899 L 0.645 12.914 L 0 12.914 L 0 0.235 L 0.645 0.235 L 0.645 3.235 A 6.078 6.078 0 0 1 1.398 1.901 A 4.894 4.894 0 0 1 2.484 0.844 A 4.489 4.489 0 0 1 5.133 0 Q 6.727 0 7.74 0.704 A 2.887 2.887 0 0 1 8.66 1.776 Q 8.932 2.303 9.07 3 A 4.64 4.64 0 0 1 10.898 0.815 A 5.129 5.129 0 0 1 13.734 0 Q 15.187 0 16.113 0.582 A 2.979 2.979 0 0 1 16.787 1.161 Q 17.789 2.321 17.801 4.641 L 17.801 12.914 L 17.168 12.914 L 17.168 4.688 A 8.315 8.315 0 0 0 17.102 3.6 Q 16.932 2.32 16.33 1.6 A 2.562 2.562 0 0 0 15.1 0.802 Q 14.524 0.621 13.781 0.621 A 6.234 6.234 0 0 0 13.699 0.621 A 4.804 4.804 0 0 0 11.865 0.99 Q 10.81 1.442 10.055 2.445 A 5.58 5.58 0 0 0 10.043 2.461 A 5.287 5.287 0 0 0 9.57 3.218 Q 9.346 3.66 9.255 4.089 A 2.857 2.857 0 0 0 9.199 4.477 Z"),
    "n": parse_path("M 0.633 0.235 L 0.633 3.188 A 5.609 5.609 0 0 1 1.592 1.636 A 5.049 5.049 0 0 1 2.461 0.856 Q 3.668 0 5.133 0 Q 6.577 0 7.495 0.579 A 2.94 2.94 0 0 1 8.162 1.154 A 3.642 3.642 0 0 1 8.823 2.338 Q 9.011 2.875 9.096 3.536 A 9.115 9.115 0 0 1 9.164 4.641 L 9.164 12.914 L 8.531 12.914 L 8.531 4.617 Q 8.52 2.578 7.699 1.6 A 2.536 2.536 0 0 0 6.536 0.829 Q 5.919 0.621 5.098 0.621 A 3.943 3.943 0 0 0 2.256 1.787 A 5.66 5.66 0 0 0 0.864 3.994 A 7.207 7.207 0 0 0 0.633 4.793 L 0.633 12.914 L 0 12.914 L 0 0.235 L 0.633 0.235 Z"),
    "p": parse_path("M 9.715 6.493 L 9.715 6.692 A 11.16 11.16 0 0 1 9.564 8.586 Q 9.385 9.624 8.994 10.459 A 5.657 5.657 0 0 1 8.437 11.403 A 4.221 4.221 0 0 1 6.983 12.685 Q 6.093 13.149 4.957 13.149 A 6.058 6.058 0 0 1 3.515 12.983 A 4.988 4.988 0 0 1 2.391 12.563 A 4.398 4.398 0 0 1 0.633 10.946 L 0.633 17.789 L 0 17.789 L 0 0.235 L 0.633 0.235 L 0.633 2.496 A 4.831 4.831 0 0 1 1.691 1.154 A 4.489 4.489 0 0 1 2.402 0.645 A 4.809 4.809 0 0 1 4.413 0.023 A 5.889 5.889 0 0 1 4.934 0 A 4.659 4.659 0 0 1 6.586 0.282 A 4.091 4.091 0 0 1 8.438 1.705 A 5.773 5.773 0 0 1 9.322 3.497 Q 9.715 4.783 9.715 6.493 Z M 0.633 3.832 L 0.633 9.762 A 4.177 4.177 0 0 0 1.493 11.172 A 3.976 3.976 0 0 0 2.244 11.795 A 4.428 4.428 0 0 0 3.833 12.415 A 6.083 6.083 0 0 0 4.969 12.516 Q 6.873 12.516 7.946 11.034 A 4.397 4.397 0 0 0 7.992 10.969 A 5.169 5.169 0 0 0 8.669 9.547 Q 9.07 8.262 9.07 6.446 Q 9.07 3.715 7.986 2.174 A 3.439 3.439 0 0 0 5.507 0.667 A 4.521 4.521 0 0 0 4.945 0.633 A 5.111 5.111 0 0 0 3.6 0.803 A 4.043 4.043 0 0 0 2.238 1.459 A 4.247 4.247 0 0 0 0.982 2.972 A 5.708 5.708 0 0 0 0.633 3.832 Z"),
    "q": parse_path("M 0 6.609 L 0 6.445 A 11.631 11.631 0 0 1 0.138 4.597 Q 0.296 3.616 0.636 2.825 A 5.443 5.443 0 0 1 1.278 1.705 A 4.066 4.066 0 0 1 4.239 0.027 A 5.384 5.384 0 0 1 4.781 0 A 5.343 5.343 0 0 1 6.28 0.204 A 4.637 4.637 0 0 1 7.313 0.645 Q 8.426 1.289 9.082 2.496 L 9.082 0.234 L 9.715 0.234 L 9.715 17.789 L 9.082 17.789 L 9.082 10.945 A 4.531 4.531 0 0 1 7.283 12.58 A 5.256 5.256 0 0 1 5.443 13.113 A 6.469 6.469 0 0 1 4.758 13.149 A 4.46 4.46 0 0 1 3.064 12.838 Q 2.065 12.432 1.347 11.496 A 5.181 5.181 0 0 1 1.278 11.402 A 6.059 6.059 0 0 1 0.366 9.498 Q 0 8.24 0 6.609 Z M 9.082 9.774 L 9.082 3.832 A 5.922 5.922 0 0 0 8.542 2.674 A 4.253 4.253 0 0 0 7.418 1.442 A 4.23 4.23 0 0 0 5.331 0.661 A 5.414 5.414 0 0 0 4.77 0.633 Q 2.861 0.633 1.781 2.111 A 4.394 4.394 0 0 0 1.74 2.168 A 5.078 5.078 0 0 0 1.064 3.573 Q 0.849 4.251 0.748 5.081 A 13.29 13.29 0 0 0 0.656 6.692 Q 0.656 8.604 1.193 9.947 A 5.207 5.207 0 0 0 1.723 10.951 A 3.535 3.535 0 0 0 2.942 12.087 Q 3.624 12.462 4.494 12.509 A 4.686 4.686 0 0 0 4.746 12.516 A 5.913 5.913 0 0 0 6.033 12.382 A 4.418 4.418 0 0 0 7.43 11.818 Q 8.543 11.121 9.082 9.774 Z"),
    "r": parse_path("M 5.66 0.129 L 5.59 0.691 L 4.77 0.621 A 4.107 4.107 0 0 0 3.348 0.859 A 3.647 3.647 0 0 0 2.063 1.67 A 4.487 4.487 0 0 0 1.063 3.139 Q 0.779 3.795 0.633 4.606 L 0.633 12.914 L 0 12.914 L 0 0.234 L 0.633 0.234 L 0.633 2.871 A 5.046 5.046 0 0 1 1.363 1.572 A 4.375 4.375 0 0 1 2.18 0.774 A 3.778 3.778 0 0 1 3.717 0.1 A 5.284 5.284 0 0 1 4.77 0 Q 5.151 0 5.431 0.062 A 1.646 1.646 0 0 1 5.66 0.129 Z"),
    "s": parse_path("M 9.188 3.621 L 8.543 3.621 A 2.565 2.565 0 0 0 7.688 1.681 A 3.539 3.539 0 0 0 7.465 1.488 Q 6.418 0.658 4.752 0.634 A 6.918 6.918 0 0 0 4.653 0.633 A 6.171 6.171 0 0 0 3.593 0.718 Q 3.014 0.819 2.549 1.04 A 3.126 3.126 0 0 0 2.016 1.36 A 2.692 2.692 0 0 0 1.443 1.929 A 2.068 2.068 0 0 0 1.043 3.176 A 3.261 3.261 0 0 0 1.082 3.698 Q 1.128 3.975 1.224 4.2 A 1.562 1.562 0 0 0 1.407 4.518 Q 1.673 4.874 2.185 5.181 A 4.973 4.973 0 0 0 2.59 5.397 A 6.545 6.545 0 0 0 3.176 5.639 Q 3.799 5.866 4.684 6.082 A 24.621 24.621 0 0 0 4.981 6.152 A 15.828 15.828 0 0 1 5.898 6.392 Q 6.368 6.531 6.759 6.685 A 6.529 6.529 0 0 1 7.465 7.008 A 4.466 4.466 0 0 1 8.08 7.403 Q 8.533 7.753 8.789 8.174 A 2.731 2.731 0 0 1 9.129 9.066 A 3.843 3.843 0 0 1 9.2 9.82 A 2.937 2.937 0 0 1 8.892 11.174 Q 8.584 11.777 7.969 12.235 Q 6.844 13.07 5.082 13.142 A 8.269 8.269 0 0 1 4.746 13.149 A 7.674 7.674 0 0 1 3.32 13.024 Q 2.144 12.801 1.307 12.182 A 3.443 3.443 0 0 1 0.489 11.346 A 2.888 2.888 0 0 1 0 9.692 L 0.633 9.692 A 2.814 2.814 0 0 0 0.921 10.781 A 2.659 2.659 0 0 0 1.811 11.772 A 3.864 3.864 0 0 0 2.951 12.293 Q 3.734 12.516 4.746 12.516 Q 6.446 12.516 7.506 11.725 A 3.078 3.078 0 0 0 8.099 11.156 A 2.135 2.135 0 0 0 8.567 9.809 A 2.413 2.413 0 0 0 7.52 7.821 Q 6.634 7.146 5 6.752 A 13.449 13.449 0 0 0 4.629 6.668 A 16.017 16.017 0 0 1 3.473 6.38 Q 2.016 5.954 1.336 5.373 A 2.592 2.592 0 0 1 0.438 3.657 A 3.714 3.714 0 0 1 0.411 3.199 A 2.717 2.717 0 0 1 1.312 1.136 A 3.68 3.68 0 0 1 1.588 0.902 A 4.2 4.2 0 0 1 3.175 0.164 Q 3.849 0 4.653 0 A 6.993 6.993 0 0 1 6.022 0.127 Q 6.85 0.292 7.5 0.674 A 3.992 3.992 0 0 1 7.946 0.979 A 3.133 3.133 0 0 1 9.173 3.265 A 4.176 4.176 0 0 1 9.188 3.621 Z"),
    "t": parse_path("M 2.344 0 L 2.988 0 L 2.988 3.422 L 5.871 3.422 L 5.871 4.066 L 2.988 4.066 L 2.988 13.066 Q 2.988 14.414 3.428 15.059 A 1.392 1.392 0 0 0 4.208 15.612 Q 4.454 15.686 4.755 15.7 A 3.105 3.105 0 0 0 4.898 15.703 A 6.373 6.373 0 0 0 5.316 15.688 Q 5.691 15.664 6.152 15.598 L 6.258 16.195 Q 5.871 16.336 4.934 16.336 Q 4.071 16.336 3.514 16.037 A 1.747 1.747 0 0 1 2.953 15.568 Q 2.394 14.85 2.348 13.356 A 8.76 8.76 0 0 1 2.344 13.148 L 2.344 4.066 L 0 4.066 L 0 3.422 L 2.344 3.422 L 2.344 0 Z"),
    "u": parse_path("M 9.188 12.68 L 8.543 12.68 L 8.543 10.629 Q 7.98 11.684 6.902 12.299 A 4.376 4.376 0 0 1 5.723 12.75 Q 5.024 12.914 4.172 12.914 Q 2.621 12.914 1.65 12.236 A 3.131 3.131 0 0 1 1.061 11.701 A 3.962 3.962 0 0 1 0.329 10.375 Q 0.013 9.437 0 8.168 L 0 0 L 0.633 0 L 0.633 8.191 A 7.401 7.401 0 0 0 0.73 9.342 Q 0.931 10.527 1.547 11.244 Q 2.433 12.276 4.13 12.281 A 5.658 5.658 0 0 0 4.148 12.281 A 6.298 6.298 0 0 0 5.412 12.162 Q 6.39 11.961 7.102 11.426 Q 8.238 10.57 8.543 8.918 L 8.543 0 L 9.188 0 L 9.188 12.68 Z"),
    "v": parse_path("M 0.68 0 L 5.238 11.672 L 9.797 0 L 10.477 0 L 5.543 12.68 L 4.922 12.68 L 0 0 L 0.68 0 Z"),
    "w": parse_path("M 0.727 0 L 3.316 9.012 L 4.008 11.742 L 7.723 0 L 8.367 0 L 12.059 11.742 L 12.773 9.012 L 15.352 0 L 16.09 0 L 12.398 12.68 L 11.766 12.68 L 8.637 3.152 L 8.039 0.879 L 7.395 3.152 L 4.313 12.68 L 3.68 12.68 L 0 0 L 0.727 0 Z"),
    "y": parse_path("M 0.691 0 L 5.391 11.695 L 5.473 11.461 L 9.855 0 L 10.559 0 L 4.887 14.883 L 4.605 15.586 A 4.506 4.506 0 0 1 3.997 16.657 A 2.911 2.911 0 0 1 1.582 17.801 A 5.645 5.645 0 0 1 1.273 17.793 Q 0.839 17.769 0.645 17.672 L 0.633 17.074 Q 1.008 17.18 1.488 17.18 A 2.818 2.818 0 0 0 2.268 17.076 A 2.228 2.228 0 0 0 3.141 16.6 A 2.936 2.936 0 0 0 3.599 16.075 Q 3.97 15.542 4.273 14.72 A 9.223 9.223 0 0 0 4.277 14.707 L 5.051 12.609 L 0 0 L 0.691 0 Z"),
    "z": parse_path("M 9.188 0.563 L 0.855 12.047 L 9.879 12.047 L 9.879 12.68 L 0 12.68 L 0 12.164 L 8.332 0.645 L 0.363 0.645 L 0.363 0 L 9.188 0 L 9.188 0.563 Z"),
    "!": parse_path("M 0.867 0 L 0.867 12.363 L 0.234 12.363 L 0.234 0 L 0.867 0 Z M 0 16.488 Q 0 16.219 0.188 16.025 A 0.611 0.611 0 0 1 0.628 15.832 A 0.741 0.741 0 0 1 0.645 15.832 Q 0.914 15.832 1.107 16.025 A 0.646 0.646 0 0 1 1.27 16.286 A 0.657 0.657 0 0 1 1.301 16.488 A 0.611 0.611 0 0 1 1.119 16.934 A 0.74 0.74 0 0 1 1.107 16.945 Q 0.914 17.133 0.645 17.133 A 0.638 0.638 0 0 1 0.354 17.067 A 0.644 0.644 0 0 1 0.188 16.945 A 0.621 0.621 0 0 1 0 16.497 A 0.766 0.766 0 0 1 0 16.488 Z"),
    "/": parse_path("M 7.816 0 L 0.691 18.527 L 0 18.527 L 7.125 0 L 7.816 0 Z"),
    "?": parse_path("M 4.172 12.61 L 3.539 12.61 A 7.754 7.754 0 0 1 3.602 11.728 Q 3.699 10.996 3.943 10.459 A 3.925 3.925 0 0 1 4.304 9.838 Q 4.703 9.268 5.379 8.637 Q 6.24 7.833 6.68 7.287 A 4.655 4.655 0 0 0 6.855 7.055 Q 7.277 6.457 7.471 5.813 A 4.227 4.227 0 0 0 7.603 5.199 Q 7.648 4.887 7.66 4.53 A 7.897 7.897 0 0 0 7.664 4.266 A 5.172 5.172 0 0 0 7.557 3.183 Q 7.354 2.232 6.762 1.594 A 2.969 2.969 0 0 0 5.092 0.694 A 4.35 4.35 0 0 0 4.277 0.621 A 4.55 4.55 0 0 0 3.158 0.751 A 3.151 3.151 0 0 0 1.623 1.629 Q 0.656 2.637 0.633 4.219 L 0 4.219 A 4.914 4.914 0 0 1 0.21 2.811 A 3.84 3.84 0 0 1 1.23 1.16 Q 2.438 0 4.277 0 Q 6.117 0 7.207 1.16 A 3.891 3.891 0 0 1 8.156 2.979 A 5.762 5.762 0 0 1 8.297 4.289 A 5.875 5.875 0 0 1 8.152 5.618 A 4.757 4.757 0 0 1 7.77 6.686 A 5.004 5.004 0 0 1 7.343 7.374 Q 6.766 8.167 5.719 9.117 A 3.917 3.917 0 0 0 4.241 11.693 A 5.848 5.848 0 0 0 4.172 12.61 Z M 3.258 16.723 Q 3.258 16.453 3.445 16.26 A 0.611 0.611 0 0 1 3.886 16.067 A 0.741 0.741 0 0 1 3.902 16.067 Q 4.172 16.067 4.365 16.26 A 0.646 0.646 0 0 1 4.528 16.52 A 0.657 0.657 0 0 1 4.559 16.723 A 0.611 0.611 0 0 1 4.377 17.168 A 0.74 0.74 0 0 1 4.365 17.18 Q 4.172 17.367 3.902 17.367 A 0.638 0.638 0 0 1 3.612 17.302 A 0.644 0.644 0 0 1 3.445 17.18 A 0.621 0.621 0 0 1 3.258 16.731 A 0.766 0.766 0 0 1 3.258 16.723 Z"),
    ".": parse_path("M 0 0.656 Q 0 0.387 0.188 0.193 A 0.611 0.611 0 0 1 0.628 0 A 0.741 0.741 0 0 1 0.645 0 Q 0.914 0 1.107 0.193 A 0.646 0.646 0 0 1 1.27 0.454 A 0.657 0.657 0 0 1 1.301 0.656 A 0.611 0.611 0 0 1 1.119 1.102 A 0.74 0.74 0 0 1 1.107 1.113 Q 0.914 1.301 0.645 1.301 A 0.638 0.638 0 0 1 0.354 1.235 A 0.644 0.644 0 0 1 0.188 1.113 A 0.621 0.621 0 0 1 0 0.665 A 0.766 0.766 0 0 1 0 0.656 Z"),
    "+": parse_path("M 6.059 0 L 6.059 5.906 L 11.695 5.906 L 11.695 6.527 L 6.059 6.527 L 6.059 12.422 L 5.414 12.422 L 5.414 6.527 L 0 6.527 L 0 5.906 L 5.414 5.906 L 5.414 0 L 6.059 0 Z"),
    "-": parse_path("M 5.508 0 L 5.508 0.633 L 0 0.633 L 0 0 L 5.508 0 Z"),
    "=": parse_path("M 9.773 0 L 9.773 0.633 L 0 0.633 L 0 0 L 9.773 0 Z M 9.773 4.77 L 9.773 5.402 L 0 5.402 L 0 4.77 L 9.773 4.77 Z")

}

def draw(key):
    path = eng_dict[key].scaled(4)
    pts = [(int(p.real), int(p.imag)) for p in (path.point(j/300) for j in range(0, 301))]
    dfs = []
    max_dy = max_dx = min_dy = min_dx = 0
    for i in range(1, len(pts)):
        if pts[i][0] > pts[0][0]:
            if pts[i][0] - pts[0][0] > max_dx:
                max_dx = pts[i][0] - pts[0][0]
        elif pts[i][0] < pts[0][0]:
            if pts[0][0] - pts[i][0] > min_dx:
                min_dx = pts[0][0] - pts[i][0]
        if pts[i][1] > pts[0][1]:
            if pts[i][1] - pts[0][1] > max_dy:
                max_dy = pts[i][1] - pts[0][1]
        elif pts[i][1] < pts[0][1]:
            if pts[0][1] - pts[i][1] > min_dy:
                min_dy = pts[0][1] - pts[i][1]
        dfs.append((pts[i][0] - pts[i-1][0], pts[i][1] - pts[i-1][1]))
    print(max_dx, min_dx, max_dy, min_dy)
    x = mouse.position[0]
    y = mouse.position[1]
    mouse.move(min_dx, -max_dy)

    mouse.press(Button.left)
    for point in dfs:
        mouse.move(point[0], point[1])
        time.sleep(0.001)
        # pass
    mouse.release(Button.left)
    mouse.move(x-mouse.position[0]+max(max_dx,min_dx)+10, y-mouse.position[1])
    print(mouse.position)


mode_switch_shift = False
mode = False
with keyboard.Events() as events:
    for event in events:
        if event.key == keyboard.Key.esc:
            break
        else:
            if isinstance(event, pynput.keyboard.Events.Press):
                if event.key == keyboard.Key.ctrl:
                    mode_switch_shift = True 
                    continue
                if event.key == keyboard.Key.enter and mode:
                    draw("tick")
                if event.key == keyboard.Key.backspace and mode:
                    draw("cross")
                try:
                    if event.key.char == "a":
                        if mode_switch_shift:
                            if mode:
                                mode = False
                            else:
                                mode = True
                            mode_switch_shift = False
                            print(f"Draw Mode: {mode}")
                            continue
                    if mode:
                        print("draw")
                        draw(event.key.char)
                except:
                    pass
            if isinstance(event, pynput.keyboard.Events.Release):
                if event.key == keyboard.Key.ctrl:
                    mode_switch_shift = False
